<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulário Técnico - Evento</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        /* Estilo Geral */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }

        .container {
            max-width: 900px;
            margin: 50px auto;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        h1 {
            text-align: center;
            color: #333;
        }

/* Estilo das Abas como Pastas sobrepostas */
.tabs {
    display: flex;
    border-bottom: 2px solid #005CAA; /* Linha de separação */
    margin-bottom: 20px;
    position: relative; /* Permite camadas de sobreposição */
    z-index: 2;
}

.tabs button {
    position: relative;
    flex: 1;
    padding: 12px 15px;
    text-align: center;
    background: linear-gradient(145deg, #f4f4f4, #e6e6e6); /* Efeito de gradiente */
    color: #333;
    border: 1px solid #ccc;
    border-bottom: none; /* Remove a borda inferior para parecer conectado */
    border-radius: 8px 8px 0 0; /* Bordas arredondadas no topo */
    cursor: pointer;
    font-weight: bold;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Sombra para destacar as abas */
    z-index: 1; /* Aba inferior */
}

.tabs button:not(:last-child) {
    margin-right: -5px; /* Sobreposição leve */
}

.tabs button.active {
    background: #005CAA; /* Cor sólida para aba ativa */
    color: white;
    border: 1px solid #005CAA; /* Faz parecer que está conectada */
    z-index: 2; /* Eleva a aba ativa acima das outras */
    transform: translateY(-2px); /* Levanta a aba ativa levemente */
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15); /* Sombra mais intensa para aba ativa */
}

/* Conteúdo da Aba */
.tab-content {
    display: none;
    padding: 20px;
    background: white;
    border: 1px solid #ccc;
    border-radius: 0 8px 8px 8px; /* Bordas arredondadas apenas na parte inferior */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Sombra para destaque */
}

.tab-content.active {
    display: block;
    z-index: 1;
}

/* Adicionando um fundo abaixo das abas */
.tabs::before {
    content: '';
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    height: 10px;
    background: linear-gradient(180deg, #e6e6e6, #ccc); /* Fundo para criar a ilusão de camadas */
    z-index: 0; /* Enviar para trás */
}

        label {
            font-weight: bold;
            display: block;
            margin: 10px 0 5px;
        }

        input, textarea, select {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        button.submit-btn {
            background: #005CAA;
            color: white;
            padding: 15px;
            width: 100%;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
        }

        button.submit-btn:hover {
            background: #003d80;
        }


           /* Estilo do botão Ajuda */
           .help-button {
            background-color: #007BFF;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
        }

        .help-button:hover {
            background-color: #0056b3;
        }

         /* Estilo geral */
         body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }

        /* Estilo do ícone de ajuda */
        .info-icon {
            display: inline-block;
            font-size: 18px;
            font-weight: bold;
            color: #007BFF;
            cursor: pointer;
            margin-left: 10px;
            position: relative;
        }

        .info-icon:hover {
            color: #0056b3;
        }

        /* Tooltip */
        .tooltip {
            visibility: hidden;
            width: 250px;
            background-color: #333;
            color: #fff;
            text-align: center;
            border-radius: 5px;
            padding: 10px;
            position: absolute;
            z-index: 100;
            bottom: 125%; /* Alinhado acima do ícone */
            left: 50%;
            transform: translateX(-50%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        /* Seta do tooltip */
        .tooltip::after {
            content: '';
            position: absolute;
            top: 100%; /* Seta para baixo */
            left: 50%;
            transform: translateX(-50%);
            border-width: 5px;
            border-style: solid;
            border-color: #333 transparent transparent transparent;
        }

        /* Mostrar tooltip ao passar o mouse */
        .info-icon:hover .tooltip {
            visibility: visible;
            opacity: 1;
        }



          /* Estilos gerais dos botões adicionar/remover núcleo e modalidade  */
          body {
                        font-family: Arial, sans-serif;
                        margin: 20px;
                        background-color: #f4f4f4;
                    }
            
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        margin-bottom: 20px;
                    }
            
                    th, td {
                        border: 1px solid #ccc;
                        padding: 10px;
                        text-align: left;
                    }
            
                    th {
                        background-color: #005CAA;
                        color: white;
                        text-transform: uppercase;
                    }
            
                    td {
                        background-color: #e6e6e6;
                    }
            
                    .container {
                        max-width: 800px;
                        margin: auto;
                        padding: 20px;
                        background-color: white;
                        border-radius: 8px;
                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                    }
            
                    .btn {
                        background-color: #005CAA;
                        color: white;
                        border: none;
                        padding: 10px 15px;
                        border-radius: 5px;
                        cursor: pointer;
                        margin-right: 5px;
                        font-size: 14px;
                    }
            
                    .btn:hover {
                        background-color: #004080;
                    }
            
                    .btn-danger {
                        background-color: #e60000;
                    }
            
                    .btn-danger:hover {
                        background-color: #b30000;
                    }
            
                    .input-field {
                        width: 100%;
                        padding: 8px;
                        border: 1px solid #ccc;
                        border-radius: 5px;
                        background-color: #fff;
                    }
            
                    .form-group {
                        margin-bottom: 15px;
                    }
            
                    .form-group label {
                        font-weight: bold;
                    }
                    




                     /* Estilo geral  do campo reunião de planejamento */
                     body {
                        font-family: Arial, sans-serif;
                        margin: 20px;
                        background-color: #f4f4f4;
                    }
            
                    .container {
                        max-width: 800px;
                        margin: auto;
                        padding: 20px;
                        background-color: white;
                        border-radius: 8px;
                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                    }
            
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        margin-bottom: 20px;
                    }
            
                    th, td {
                        border: 1px solid #ccc;
                        padding: 10px;
                        text-align: left;
                    }
            
                    th {
                        background-color: #005CAA;
                        color: white;
                        text-transform: uppercase;
                    }
            
                    td {
                        background-color: #e6e6e6;
                    }
            
                    /* Estilo do texto de ajuda (tooltip) */
                    .help-text {
                        position: relative;
                        cursor: pointer;
                        color: #005CAA;
                        font-weight: bold;
                        display: inline-block;
                    }
            
                    .help-text:hover {
                        text-decoration: underline;
                    }
            
                    .tooltip {
                        visibility: hidden;
                        width: 300px;
                        background-color: #333;
                        color: #fff;
                        text-align: left;
                        border-radius: 5px;
                        padding: 10px;
                        position: absolute;
                        z-index: 1;
                        bottom: 125%; /* Exibe acima do texto */
                        left: 50%;
                        transform: translateX(-50%);
                        opacity: 0;
                        transition: opacity 0.3s;
                    }
            
                    .tooltip::after {
                        content: '';
                        position: absolute;
                        top: 100%;
                        left: 50%;
                        transform: translateX(-50%);
                        border-width: 5px;
                        border-style: solid;
                        border-color: #333 transparent transparent transparent;
                    }
            
                    .help-text:hover .tooltip {
                        visibility: visible;
                        opacity: 1;
                    }
            
                    /* Campo de texto */
                    .input-field {
                        width: 100%;
                        padding: 10px;
                        border: 1px solid #ccc;
                        border-radius: 5px;
                        background-color: white;
                        resize: vertical; /* Permitir redimensionamento vertical */
                    }




                      /* Estilo geral equipe de trabalho */
                      body {
                        font-family: Arial, sans-serif;
                        margin: 20px;
                        background-color: #f4f4f4;
                    }
            
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        margin-bottom: 20px;
                    }
            
                    th, td {
                        border: 1px solid #ccc;
                        padding: 10px;
                        text-align: left;
                    }
            
                    th {
                        background-color: #005CAA;
                        color: white;
                        text-transform: uppercase;
                    }
            
                    td {
                        background-color: #e6e6e6;
                    }
            
                    .container {
                        max-width: 1000px;
                        margin: auto;
                        padding: 20px;
                        background-color: white;
                        border-radius: 8px;
                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                    }
            
                    .btn {
                        background-color: #005CAA;
                        color: white;
                        border: none;
                        padding: 10px 15px;
                        border-radius: 5px;
                        cursor: pointer;
                        margin-right: 5px;
                        font-size: 14px;
                    }
            
                    .btn:hover {
                        background-color: #004080;
                    }
            
                    .btn-danger {
                        background-color: #e60000;
                    }
            
                    .btn-danger:hover {
                        background-color: #b30000;
                    }
            
                    .input-field {
                        width: 100%;
                        padding: 8px;
                        border: 1px solid #ccc;
                        border-radius: 5px;
                        background-color: #fff;
                    }







    </style>
</head>
<body>
    <header class="header">
        <h2 class="header-title">Formulário Técnico - Projeto</h2>
    </header>
    <div class="container">
        <h1>Preencha as Informações do Projeto</h1>

        <!-- Abas -->
        <div class="tabs">
            <button class="tab-link active" data-tab="tab1">1. Identificação</button>
            <button class="tab-link" data-tab="tab2">2. Localizaçãoo</button>
            <button class="tab-link" data-tab="tab3">3. Objeto</button>
            <button class="tab-link" data-tab="tab4">4. Planejamento</button>
            <button class="tab-link" data-tab="tab5">5. Materiais</button>
            <button class="tab-link" data-tab="tab6">6. Divulgação</button>
        </div>

        <input type="text" id="proposalSearch" placeholder="Digite o número da proposta">
<button type="button" onclick="carregarProjeto(document.getElementById('proposalSearch').value)">Carregar Projeto</button>
        <!-- Conteúdo das Abas -->
        <form id="form-evento" action="/salvar-evento" method="POST">
            <!-- Aba 1: Identificação -->
            <div class="tab-content active" id="tab1">
                <form id="formTab1">
                    <!-- Identificação da Proponente -->
                    <fieldset>
                        <legend>1.1 Identificação da Proponente</legend>
                        <label for="cnpjProponente">CNPJ da Proponente:</label>
            <input type="text" id="cnpjProponente" name="cnpjProponente" onblur="buscarDadosCNPJ()" placeholder="Digite o CNPJ">
            
                        <label for="nomeProponente">Nome da Proponente:</label>
                        <input type="text" id="nomeProponente" name="nomeProponente" required>
            
                        <label for="nomeDirigente">Nome do Dirigente:</label>
                        <input type="text" id="nomeDirigente" name="nomeDirigente" required>
            
                        <label for="telefoneDirigente">Telefone de Contato (DDD):</label>
                        <input type="text" id="telefoneDirigente" name="telefoneDirigente" required>
            
                        <label for="emailDirigente">E-mail:</label>
                        <input type="email" id="emailDirigente" name="emailDirigente" required>
            
                        <label for="proposalNumber">Número da Proposta:</label>
                        <input type="text" id="proposalNumber" name="proposalNumber" required>
                    </fieldset>
            
                    <!-- Responsável pela Elaboração -->
                    <fieldset>
                        <legend>1.2 Responsável pela Elaboração (Opcional)</legend>
                        <label for="responsavelNome">Nome:</label>
                        <input type="text" id="responsavelNome" name="responsavelNome">
            
                        <label for="responsavelEmail">E-mail:</label>
                        <input type="email" id="responsavelEmail" name="responsavelEmail">
            
                        <label for="responsavelTelefone">Telefone de Contato (DDD):</label>
                        <input type="text" id="responsavelTelefone" name="responsavelTelefone">
                    </fieldset>
            
                    <!-- Dimensão do Projeto -->
                    <fieldset>
                        <legend>1.3 Dimensão do Projeto</legend>
                        <!-- Formação Esportiva -->
                        <label for="dimensaoFormacao">
                            <input type="radio" id="dimensaoFormacao" name="dimensaoEvento" value="formacao" required>
                            Formação Esportiva
                        </label>
                        <p class="dimensao-descricao">
                            Oferta oportunidades de acesso à prática esportiva em suas diversas manifestações por meio de ações planejadas, inclusivas e lúdicas para crianças e adolescentes. Este nível de atendimento comporta os serviços de vivência, fundamentação, aprendizagem esportiva e fomento e difusão do conhecimento científico, tecnológico e de inovação.
                        </p>
            
                        <!-- Esporte para toda vida -->
                        <label for="dimensaoEsporteVida">
                            <input type="radio" id="dimensaoEsporteVida" name="dimensaoEvento" value="esporte_vida" required>
                            Esporte para toda vida
                        </label>
                        <p class="dimensao-descricao">
                            Caracteriza-se pela vivência do esporte com autodeterminação a partir do conhecimento esportivo adquirido, pela transmissão pedagógica crítica e assumida dentre os hábitos culturais saudáveis ao longo da vida. Este nível abrange os serviços de esporte e lazer, atividade física, aprendizagem esportiva para crianças, jovens, adultos, idosos (esporte ao longo da vida), além do fomento e difusão do conhecimento científico, tecnológico e de inovação.
                        </p>
                    </fieldset>
            
                    <!-- Botão para salvar a aba -->
                    <button type="button" onclick="saveTab('formTab1')">Salvar Identificação</button>
                </form>
            </div>

<!-- Aba 2: Localização e Outras Informações -->
<div class="tab-content" id="tab2">
    <h3>2. Localização</h3>
    <form id="formTab2">
        <!-- Seleção de Município e Estado -->
        <label for="estado">Estado:</label>
        <select id="estado" name="estado" onchange="fetchMunicipios(this.value)" required>
            <option value="" disabled selected>Selecione um estado</option>
            <!-- Opções serão populadas dinamicamente -->
        </select>

        <label for="municipio">Município:</label>
        <select id="municipio" name="municipio" onchange="fetchDadosMunicipio(this.value)" required>
            <option value="" disabled selected>Selecione um município</option>
            <!-- Opções serão populadas dinamicamente -->
        </select>

        <!-- Campos de IDH -->
        <label for="idh">IDH:</label>
        <input type="text" id="idh" name="idh" required>

        <label for="idhFonte">Fonte:</label>
        <input type="text" id="idhFonte" name="idhFonte" required>

        <label for="idhAno">Ano de Referência:</label>
        <input type="number" id="idhAno" name="idhAno" required>

        <!-- Campos de População -->
        <label for="numeroHabitantes">Número de Habitantes:</label>
        <input type="number" id="numeroHabitantes" name="numeroHabitantes" required>

        <label for="habitantesFonte">Fonte:</label>
        <input type="text" id="habitantesFonte" name="habitantesFonte" required>

        <label for="habitantesAno">Ano de Referência:</label>
        <input type="number" id="habitantesAno" name="habitantesAno" required>

        <!-- Seção de Entidade -->
        <h3>1.6 Entidade</h3>
        <label>A Entidade já celebrou parceria com o Ministério?</label>
        <label for="parceriaSim">
            <input type="radio" id="parceriaSim" name="parceriaMinisterio" value="sim" required>
            Sim
        </label>
        <label for="parceriaNao">
            <input type="radio" id="parceriaNao" name="parceriaMinisterio" value="nao" required>
            Não
        </label>
        <label for="numeroParcerias">Número de Parcerias:</label>
        <input type="number" id="numeroParcerias" name="numeroParcerias">
        <label for="resultadosParcerias">Resultados das Parcerias:</label>
        <textarea id="resultadosParcerias" name="resultadosParcerias"></textarea>

        <!-- Seção de Entidades Parceiras -->
        <h3>1.7 Entidades Parceiras</h3>
        <label for="entidadeNome">Nome:</label>
        <input type="text" id="entidadeNome" name="entidadeNome" required>
        <label for="entidadeEmail">E-mail:</label>
        <input type="email" id="entidadeEmail" name="entidadeEmail" required>
        <label for="entidadeTelefone">Telefone:</label>
        <input type="text" id="entidadeTelefone" name="entidadeTelefone" required>
        <label for="entidadeEndereco">Endereço:</label>
        <input type="text" id="entidadeEndereco" name="entidadeEndereco" required>
        <label for="entidadeMunicipio">Município:</label>
        <input type="text" id="entidadeMunicipio" name="entidadeMunicipio" required>
        <label for="entidadeUF">UF:</label>
        <input type="text" id="entidadeUF" name="entidadeUF" required>
        <label for="entidadeCEP">CEP:</label>
        <input type="text" id="entidadeCEP" name="entidadeCEP" required>
        <label for="contribuicaoEntidade">Contribuição:</label>
        <textarea id="contribuicaoEntidade" name="contribuicaoEntidade"></textarea>

        <!-- Seção de Coordenador -->
        <h3>1.8 Coordenador</h3>
        <label for="coordenadorNome">Nome:</label>
        <input type="text" id="coordenadorNome" name="coordenadorNome" required>
        <label for="coordenadorEmail">E-mail:</label>
        <input type="email" id="coordenadorEmail" name="coordenadorEmail" required>
        <label for="coordenadorTelefone">Telefone:</label>
        <input type="text" id="coordenadorTelefone" name="coordenadorTelefone" required>

        <!-- Seção de Capacidade Técnica -->
        <h3>1.9 Capacidade Técnica</h3>
        <label>Capacidade Técnica:</label>
        <label for="capacidadeSim">
            <input type="radio" id="capacidadeSim" name="capacidadeTecnica" value="sim" required>
            Sim
        </label>
        <label for="capacidadeNao">
            <input type="radio" id="capacidadeNao" name="capacidadeTecnica" value="nao" required>
            Não
        </label>
        <label for="historicoCapacidade">Histórico:</label>
        <textarea id="historicoCapacidade" name="historicoCapacidade"></textarea>

        <button type="button" onclick="saveTab('formTab2')">Salvar</button>
    </form>
</div>

            <!-- Aba 3: Objeto -->
            <div class="tab-content" id="tab3">
                  <!-- Botão de Ajuda -->

                

                <label for="objeto">Objeto:</label>
                <span class="info-icon">
                    ?
                    <span class="tooltip">Descrever objetivamente o Projeto de apoio às ações educacionais, indígenas, esportivas ou de lazer que serão desenvolvidas.

                                          Ex: Implementação e Desenvolvimento do Projeto XXX, no Município/Estado de XXXXXX/XX.
                    </span>
                </span>
                <textarea id="objeto" name="objeto" rows="4" required></textarea>


    


                <label for="justificativa">Objetivo Geral:</label>
                <span class="info-icon">
                    ?
                    <span class="tooltip">Descrever objetivamente o Projeto de apoio às ações educacionais, indígenas, esportivas ou de lazer que serão desenvolvidas.

                                          Ex: Implementação e Desenvolvimento do Projeto XXX, no Município/Estado de XXXXXX/XX.
                    </span>
                </span>
                <textarea id="objetoGeral" name="objetoGeral" rows="4" required></textarea>





                <label for="justificativa">Objetivos Específicos:</label>
                <span class="info-icon">
                    ?
                    <span class="tooltip">Descrever objetivamente o Projeto de apoio às ações educacionais, indígenas, esportivas ou de lazer que serão desenvolvidas.

                                          Ex: Implementação e Desenvolvimento do Projeto XXX, no Município/Estado de XXXXXX/XX.
                    </span>
                </span>
                <textarea id="objetoEspecifico" name="objetoEspecifico" rows="4" required></textarea>



                <label for="justificativa">Justificativa:</label>
                <span class="info-icon">
                    ?
                    <span class="tooltip">Descrever objetivamente o Projeto de apoio às ações educacionais, indígenas, esportivas ou de lazer que serão desenvolvidas.

                                          Ex: Implementação e Desenvolvimento do Projeto XXX, no Município/Estado de XXXXXX/XX.
                    </span>
                </span>
                <textarea id="justificativa" name="justificativa" rows="4" required></textarea>
            
            
            
            </div>






            <!-- Aba 4: Planejamento -->
            <div class="tab-content" id="tab4">
                <h2>Metodologia</h2>
                <textarea id="metodologia" name="metodologia" rows="4" required></textarea>





                <h2> Núcleos (onde serão realizadas as atividades)</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Quantidade de Núcleos</th>
                        </tr>
                    </thead>
                    <tbody id="nucleoList">
                        <tr>
                            <td>
                                <input type="text" class="input-field" placeholder="Digite a quantidade de núcleos">
                            </td>
                        </tr>
                    </tbody>
                </table>
                <button class="btn" onclick="addNucleo()">Adicionar Núcleo</button>
                <button class="btn-danger" onclick="removeNucleo()">Remover Último Núcleo</button>
            



                <h2>Modalidades (que serão realizadas as atividades)</h2>
                <table>
                    <thead>
                        <tr>
                            <th>Quantidade de Núcleos</th>
                        </tr>
                    </thead>
                    <tbody id="nucleoList">
                        <tr>
                            <td>
                                <input type="text" class="input-field" placeholder="Digite a quantidade de núcleos">
                            </td>
                        </tr>
                    </tbody>
                </table>
                <button class="btn" onclick="addNucleo()">Adicionar Núcleo</button>
                <button class="btn-danger" onclick="removeNucleo()">Remover Último Núcleo</button>


                <h2>3.7 Equipe de Trabalho</h2>
                <p>Inserir todos os Recursos Humanos envolvidos na realização do projeto e identificar quais serão cedidos pela proponente.</p>
                <table id="teamTable">
                    <thead>
                        <tr>
                            <th>Função</th>
                            <th>QTD RH</th>
                            <th>Atribuição</th>
                            <th>Carga Horária Semanal/Diária</th>
                            <th>QTD Meses/Diárias</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><input type="text" class="input-field" placeholder="Coordenador Geral"></td>
                            <td><input type="number" class="input-field" placeholder="1"></td>
                            <td><textarea class="input-field" placeholder="Detalhe as atribuições"></textarea></td>
                            <td><input type="text" class="input-field" placeholder="40h/semana"></td>
                            <td><input type="number" class="input-field" placeholder="12"></td>
                            <td>
                                <button class="btn-danger" onclick="removeRow(this)">Remover</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <button class="btn" onclick="addRow()">Adicionar Cargo</button>


<h2>3.4 Reunião de Planejamento</h2>
<table>
    <tr>
        <th>Descrição</th>
    </tr>
    <tr>
        <td>
            <span class="help-text">
                Reunião de Planejamento
                <span class="tooltip">
                    Reuniões semanais/quinzenais com os Recursos Humanos, para discussões acerca dos problemas da prática pedagógica, entre outras ações relacionadas com a realização do Projeto, buscando a melhoria do processo.
                </span>
            </span>
        </td>
    </tr>
</table>
<label for="descricao-reuniao">Descreva as reuniões:</label>
<textarea id="descricao-reuniao" class="input-field" rows="4" placeholder="Digite aqui uma descrição detalhada das reuniões..."></textarea>


            </div>

            <!-- Aba 5: Materiais -->
            <div class="tab-content" id="tab5">



                <style>
                    /* Estilo geral */
                    body {
                        font-family: Arial, sans-serif;
                        margin: 20px;
                        background-color: #f4f4f4;
                    }
            
                    .container {
                        max-width: 1200px;
                        margin: auto;
                        padding: 20px;
                        background-color: white;
                        border-radius: 8px;
                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                    }
            
                    table {
                        width: 100%;
                        border-collapse: collapse;
                        margin-bottom: 20px;
                    }
            
                    th, td {
                        border: 1px solid #ccc;
                        padding: 10px;
                        text-align: left;
                    }
            
                    th {
                        background-color: #005CAA;
                        color: white;
                        text-transform: uppercase;
                    }
            
                    td {
                        background-color: #e6e6e6;
                    }
            
                    .btn {
                        background-color: #005CAA;
                        color: white;
                        border: none;
                        padding: 10px 15px;
                        border-radius: 5px;
                        cursor: pointer;
                        margin-right: 5px;
                        font-size: 14px;
                    }
            
                    .btn:hover {
                        background-color: #004080;
                    }
            
                    .btn-danger {
                        background-color: #e60000;
                    }
            
                    .btn-danger:hover {
                        background-color: #b30000;
                    }
            
                    .input-field {
                        width: 100%;
                        padding: 8px;
                        border: 1px solid #ccc;
                        border-radius: 5px;
                        background-color: white;
                    }
            
                    .instructions {
                        color: red;
                        font-size: 14px;
                        margin-bottom: 10px;
                    }
                </style>












                <h2>3.5 Lista de Materiais / Serviços para o Projeto</h2>
                <div class="instructions">Justificar o porquê da quantidade no campo "Memória de Cálculo do Quantitativo".</div>
                <table id="materialTable">
                    <thead>
                        <tr>
                            <th>Nº</th>
                            <th>Modalidade</th>
                            <th>Material com Especificação</th>
                            <th>Quantidade/Diárias</th>
                            <th>Memória de Cálculo do Quantitativo</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>1</td>
                            <td><input type="text" class="input-field" placeholder="Digite a modalidade"></td>
                            <td><input type="text" class="input-field" placeholder="Especifique o material"></td>
                            <td><input type="number" class="input-field" placeholder="Digite a quantidade"></td>
                            <td><textarea class="input-field" placeholder="Justifique o porquê da quantidade"></textarea></td>
                            <td><button class="btn-danger" onclick="removeRow(this)">Remover</button></td>
                        </tr>
                    </tbody>
                </table>
                <button class="btn" onclick="addMaterialRow()">Adicionar Material</button>
        
                <h2>3.6 Lista de Uniforme (quando houver)</h2>
                <div class="instructions">Descrever os itens e justificar o porquê da quantidade no campo "Memória de Cálculo do Quantitativo".</div>
                <table id="uniformTable">
                    <thead>
                        <tr>
                            <th>Nº</th>
                            <th>Vestimenta</th>
                            <th>Especificações</th>
                            <th>Quantidade</th>
                            <th>Memória de Cálculo do Quantitativo</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>1</td>
                            <td><input type="text" class="input-field" placeholder="Digite a vestimenta"></td>
                            <td><input type="text" class="input-field" placeholder="Especifique a vestimenta"></td>
                            <td><input type="number" class="input-field" placeholder="Digite a quantidade"></td>
                            <td><textarea class="input-field" placeholder="Justifique o porquê da quantidade"></textarea></td>
                            <td><button class="btn-danger" onclick="removeRow(this)">Remover</button></td>
                        </tr>
                    </tbody>
                </table>
                <button class="btn" onclick="addUniformRow()">Adicionar Uniforme</button>
            </div>

























            <!-- Aba 6: Divulgação -->
            <div class="tab-content" id="tab6">
                

                <style>
                    /* Estilo geral */
                    body {
                        font-family: Arial, sans-serif;
                        margin: 20px;
                        background-color: #f9f9f9;
                        color: #333;
                    }
            
                    .container {
                        max-width: 800px;
                        margin: auto;
                        padding: 20px;
                        background-color: white;
                        border-radius: 10px;
                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                        border: 1px solid #ddd;
                    }
            
                    h2 {
                        background-color: #005CAA;
                        color: white;
                        padding: 10px 15px;
                        border-radius: 5px;
                        font-size: 20px;
                        margin-bottom: 15px;
                        text-align: center;
                    }
            
                    p {
                        margin-bottom: 10px;
                        line-height: 1.5;
                    }
            
                    /* Estilo dos checkboxes */
                    .checkbox-group {
                        padding: 15px;
                        background-color: #f4f4f4;
                        border-radius: 8px;
                        border: 1px solid #ddd;
                        margin-bottom: 20px;
                    }
            
                    .checkbox-group label {
                        display: block;
                        margin-bottom: 10px;
                        cursor: pointer;
                        font-size: 14px;
                    }
            
                    .checkbox-group input[type="checkbox"] {
                        margin-right: 10px;
                    }
            
                    /* Estilo dos campos adicionais */
                    .hidden-field {
                        display: none;
                        margin-top: 10px;
                    }
            
                    .hidden-field.active {
                        display: block;
                    }
            
                    .input-field {
                        width: 100%;
                        padding: 8px 12px;
                        border: 1px solid #ccc;
                        border-radius: 5px;
                        background-color: white;
                        font-size: 14px;
                        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
                    }
            
                    /* Estilo do texto de ajuda */
                    .help-text {
                        color: #e60000;
                        cursor: pointer;
                        font-size: 14px;
                        margin-top: 10px;
                        display: inline-block;
                        position: relative;
                    }
            
                    .help-text:hover {
                        text-decoration: underline;
                    }
            
                    .tooltip {
                        visibility: hidden;
                        width: 350px;
                        background-color: #333;
                        color: #fff;
                        text-align: left;
                        padding: 10px;
                        border-radius: 5px;
                        position: absolute;
                        z-index: 1;
                        top: -60px;
                        left: 50%;
                        transform: translateX(-50%);
                        opacity: 0;
                        transition: opacity 0.3s ease;
                    }
            
                    .tooltip::after {
                        content: '';
                        position: absolute;
                        top: 100%;
                        left: 50%;
                        transform: translateX(-50%);
                        border-width: 6px;
                        border-style: solid;
                        border-color: #333 transparent transparent transparent;
                    }
            
                    .help-text:hover .tooltip {
                        visibility: visible;
                        opacity: 1;
                    }
            
                    /* Botões interativos */
                    button {
                        background-color: #005CAA;
                        color: white;
                        border: none;
                        padding: 10px 15px;
                        border-radius: 5px;
                        cursor: pointer;
                        font-size: 14px;
                        transition: background-color 0.3s;
                    }
            
                    button:hover {
                        background-color: #004080;
                    }
            
                    /* Responsividade */
                    @media (max-width: 600px) {
                        h2 {
                            font-size: 18px;
                        }
            
                        .tooltip {
                            width: 280px;
                        }
                    }
                </style>



<style>
    /* Estilo geral */
    body {
        font-family: Arial, sans-serif;
        margin: 20px;
        background-color: #f9f9f9;
        color: #333;
    }

    .container {
        max-width: 800px;
        margin: auto;
        padding: 20px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border: 1px solid #ddd;
    }

    h2 {
        background-color: #005CAA;
        color: white;
        padding: 10px 15px;
        border-radius: 5px;
        font-size: 20px;
        margin-bottom: 15px;
        text-align: center;
    }

    p {
        margin-bottom: 10px;
        line-height: 1.5;
    }

    .help-text {
        color: #005CAA;
        cursor: pointer;
        font-size: 14px;
        text-decoration: underline;
        position: relative;
        display: inline-block;
    }

    .help-text:hover {
        color: #003f80;
    }

    .tooltip {
        visibility: hidden;
        width: 350px;
        background-color: #333;
        color: white;
        text-align: left;
        padding: 10px;
        border-radius: 5px;
        position: absolute;
        z-index: 1;
        bottom: 100%;
        left: 50%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.3s;
    }

    .tooltip::after {
        content: '';
        position: absolute;
        top: 100%;
        left: 50%;
        transform: translateX(-50%);
        border-width: 6px;
        border-style: solid;
        border-color: #333 transparent transparent transparent;
    }

    .help-text:hover .tooltip {
        visibility: visible;
        opacity: 1;
    }

    /* Campo de entrada */
    .input-field {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: white;
        font-size: 14px;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
        margin-top: 10px;
    }

    .input-label {
        font-weight: bold;
        margin-top: 15px;
        display: block;
    }

    /* Responsividade */
    @media (max-width: 600px) {
        h2 {
            font-size: 18px;
        }

        .tooltip {
            width: 280px;
        }
    }
</style>





<style>
    /* Estilo geral */
    body {
        font-family: Arial, sans-serif;
        margin: 20px;
        background-color: #f9f9f9;
        color: #333;
    }

    .container {
        max-width: 800px;
        margin: auto;
        padding: 20px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border: 1px solid #ddd;
    }

    h2 {
        background-color: #005CAA;
        color: white;
        padding: 10px 15px;
        border-radius: 5px;
        font-size: 18px;
        margin-bottom: 15px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        font-weight: bold;
        display: block;
        margin-bottom: 5px;
    }

    .input-field {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: white;
        font-size: 14px;
        box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .divider {
        margin: 30px 0;
        border-top: 1px solid #ddd;
    }

    /* Responsividade */
    @media (max-width: 600px) {
        h2 {
            font-size: 16px;
        }
    }
</style>



<h2>3.8 Divulgação</h2>
<p>Detalhe como ocorrerá a divulgação das ações do Projeto (pode ser assinalada mais de uma alternativa):</p>

<div class="checkbox-group">
    <label><input type="checkbox"> Carros ou bicicletas de som</label><br>
    <label><input type="checkbox"> Cartazes</label><br>
    <label><input type="checkbox"> Faixas</label><br>
    <label><input type="checkbox"> Banners</label><br>
    <label><input type="checkbox"> Jornais</label><br>
    <label><input type="checkbox"> Panfletos</label><br>
    <label><input type="checkbox"> Folder</label><br>
    <label><input type="checkbox"> Mídia (meios de comunicação social de massas, como rádio, cinema e televisão)</label><br>
    <label><input type="checkbox" id="internet-checkbox" onclick="toggleField('internet-field')"> Internet</label>
    <div id="internet-field" class="hidden-field">
        <input type="text" class="input-field" placeholder="Especifique os meios de internet">
    </div>
    <label><input type="checkbox" id="outros-checkbox" onclick="toggleField('outros-field')"> Outros</label>
    <div id="outros-field" class="hidden-field">
        <input type="text" class="input-field" placeholder="Especifique outros meios">
    </div>
</div>

<p class="help-text">
    Obs: Clique aqui para mais informações
    <span class="tooltip">
        A entidade deverá informar os itens que serão utilizados e comprovados durante a execução da parceria. Caso não esteja previsto no Plano de Trabalho, a entidade deverá arcar com os custos da aquisição.
    </span>
</p>




<h2>Identificação do Projeto</h2>
<p>
    A identificação visual do Projeto nos espaços físicos será feita por meio de
    <span class="help-text">
        xxxxxx, xxxxxx ou outra forma similar
        <span class="tooltip">
            A identificação deve seguir os padrões estabelecidos no Manual de Aplicação do Ministério da Cidadania e ser previamente acordada com a SNELIS/MC.
        </span>
    </span>,
    observando-se os padrões estabelecidos no Manual de Aplicação do Ministério da Cidadania.
</p>

<label for="descricao-identificacao" class="input-label">Descreva como será feita a identificação visual:</label>
<textarea id="descricao-identificacao" class="input-field" rows="4" placeholder="Detalhe como será feita a identificação visual do projeto nos espaços físicos..."></textarea>






<h2>3.11 Cronograma de Execução Físico-Financeira</h2>
        <div class="form-group">
            <label for="valor-concedente">Valor do Concedente (R$):</label>
            <input type="text" id="valor-concedente" class="input-field" placeholder="Digite o valor concedido">
        </div>
        <div class="form-group">
            <label for="valor-convenente">Valor do Convenente - Contrapartida (R$):</label>
            <input type="text" id="valor-convenente" class="input-field" placeholder="Digite o valor da contrapartida">
        </div>
        <div class="form-group">
            <label for="valor-global">Valor Global (R$):</label>
            <input type="text" id="valor-global" class="input-field" placeholder="Digite o valor global do projeto">
        </div>

        <div class="divider"></div>

        <!-- Vigência do Projeto -->
        <h2>3.12 Vigência do Projeto</h2>
        <div class="form-group">
            <label for="periodo-estruturacao">Período de Estruturação (meses):</label>
            <input type="number" id="periodo-estruturacao" class="input-field" placeholder="Informe o período de estruturação em meses">
        </div>
        <div class="form-group">
            <label for="periodo-execucao">Período de Execução (meses):</label>
            <input type="number" id="periodo-execucao" class="input-field" placeholder="Informe o período de execução em meses">
        </div>
        <div class="form-group">
            <label for="periodo-vigencia-total">Período de Vigência Total (meses):</label>
            <input type="number" id="periodo-vigencia-total" class="input-field" placeholder="Informe o período total de vigência">
        </div>






            </div>

            <!-- Botão de Envio -->
<!-- Botão de Envio -->
            <button type="button" class="submit-btn" onclick="salvarEvento()">Salvar Projeto</button>
            <button type="button" class="submit-btn" onclick="gerarPDF()">Gerar PDF</button>

        </form>
    </div>


    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const button = document.querySelector('button');
        button.addEventListener('click', () => {
            const proposalNumber = document.getElementById('proposalSearch')?.value;
            if (proposalNumber) {
                carregarProjeto(proposalNumber);
            } else {
                alert('Por favor, insira um número da proposta.');
            }
        });
    });
    //Validar CNPJ
    function validarCNPJ(cnpj) {
    cnpj = cnpj.replace(/\D/g, ''); // Remove caracteres não numéricos
    if (cnpj.length !== 14) return false;

    // Validação matemática básica
    let tamanho = cnpj.length - 2;
    let numeros = cnpj.substring(0, tamanho);
    let digitos = cnpj.substring(tamanho);
    let soma = 0;
    let pos = tamanho - 7;

    for (let i = tamanho; i >= 1; i--) {
        soma += numeros.charAt(tamanho - i) * pos--;
        if (pos < 2) pos = 9;
    }

    let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
    if (resultado != digitos.charAt(0)) return false;

    tamanho = tamanho + 1;
    numeros = cnpj.substring(0, tamanho);
    soma = 0;
    pos = tamanho - 7;

    for (let i = tamanho; i >= 1; i--) {
        soma += numeros.charAt(tamanho - i) * pos--;
        if (pos < 2) pos = 9;
    }

    resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
    return resultado == digitos.charAt(1);
}
    //Consultar CNPJ
    async function buscarDadosCNPJ() {
    const cnpjInput = document.getElementById('cnpjProponente').value.replace(/\D/g, ''); // Remove pontuações

    if (!cnpjInput || cnpjInput.length !== 14) {
        alert('Por favor, insira um CNPJ válido.');
        return;
    }

    try {
        const response = await fetch(`/consultar-cnpj/${cnpjInput}`);
        if (!response.ok) throw new Error('CNPJ não encontrado');

        const dados = await response.json();

        // Preenchendo os campos com os dados retornados pela API
        document.getElementById('nomeProponente').value = dados.nome || 'Nome não disponível';
        document.getElementById('telefoneDirigente').value = dados.telefone || 'Telefone não disponível';
        document.getElementById('emailDirigente').value = dados.email || 'E-mail não disponível';

        // Preenchendo o nome do dirigente a partir do quadro societário
        const dirigente = dados.qsa?.find(pessoa => pessoa.qual.includes('Presidente') || pessoa.qual.includes('Responsável'));
        document.getElementById('nomeDirigente').value = dirigente?.nome || 'Dirigente não disponível';

        alert('Informações preenchidas com sucesso!');
    } catch (error) {
        console.error('Erro ao buscar CNPJ:', error);
        alert('Não foi possível encontrar informações para este CNPJ.');
    }
}
    // Politica de Privacidade 
    function showInfo(type) {
    const modal = document.getElementById('infoModal');
    const modalText = document.getElementById('modal-text');

    if (type === 'privacidade') {
        modalText.innerHTML = `
            <h2>Política de Privacidade</h2>
            <p>Esta política descreve como seus dados são coletados, usados e protegidos de acordo com a Lei Geral de Proteção de Dados (LGPD - Lei nº 13.709/2018).</p>
            <ul>
                <li>Seus dados serão usados apenas para os fins informados e consentidos.</li>
                <li>Você tem o direito de acessar, corrigir ou excluir suas informações pessoais.</li>
                <li>Os dados coletados estão protegidos por medidas de segurança avançadas.</li>
            </ul>
        `;
    } else if (type === 'termos') {
        modalText.innerHTML = `
            <h2>Termos de Uso</h2>
            <p>Os termos de uso regulam o acesso e a utilização deste sistema, conforme as leis vigentes:</p>
            <ul>
                <li>O uso deste sistema implica a aceitação dos termos descritos aqui.</li>
                <li>Você é responsável por manter a confidencialidade de suas credenciais de acesso.</li>
                <li>É proibido o uso do sistema para fins ilegais ou não autorizados.</li>
            </ul>
        `;
    }

    modal.classList.remove('hidden');
    modal.style.display = 'block';
}

async function salvarEvento() {
    const form = document.getElementById('form-evento');
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());

    try {
        const response = await fetch('/salvar-evento', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        });

        if (response.ok) {
            alert('Evento salvo com sucesso!');
        } else {
            const errorText = await response.text();
            alert(`Erro ao salvar o evento: ${errorText}`);
        }
    } catch (error) {
        console.error('Erro ao salvar o evento:', error);
        alert('Erro ao salvar o evento.');
    }
}

function carregarProjeto(proposalNumber) {
    if (!proposalNumber) {
        alert('Número da proposta é obrigatório.');
        return;
    }

    fetch(`/carregar-evento/${proposalNumber}`)
        .then(response => {
            if (!response.ok) throw new Error('Evento não encontrado.');
            return response.json();
        })
        .then(data => {
            Object.entries(data).forEach(([key, value]) => {
                const input = document.getElementById(key);
                if (input) input.value = value;
            });
            alert('Evento carregado com sucesso!');
        })
        .catch(error => {
            console.error('Erro ao carregar evento:', error);
            alert('Erro ao carregar o evento.');
        });
}

async function gerarPDF() {
    const form = document.getElementById('form-evento');
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());

    try {
        const response = await fetch('/gerar-pdf', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        });

        if (response.ok) {
            const blob = await response.blob();
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `PTP_${data.proposalNumber || 'evento'}.pdf`;
            a.click();
            URL.revokeObjectURL(url);
        } else {
            const errorText = await response.text();
            alert(`Erro ao gerar o PDF: ${errorText}`);
        }
    } catch (error) {
        console.error('Erro ao gerar o PDF:', error);
        alert('Erro ao gerar o PDF.');
    }
}

// Alternar abas
const tabLinks = document.querySelectorAll('.tab-link');
    const tabContents = document.querySelectorAll('.tab-content');

    tabLinks.forEach(link => {
        link.addEventListener('click', () => {
            // Remover classes "active" de todas as abas e conteúdos
            tabLinks.forEach(tab => tab.classList.remove('active'));
            tabContents.forEach(content => content.classList.remove('active'));

            // Adicionar "active" à aba clicada e ao conteúdo correspondente
            link.classList.add('active');
            const tabId = link.getAttribute('data-tab');
            document.getElementById(tabId).classList.add('active');
        });
    });
    // Função para carregar estados ao carregar a página
    document.addEventListener("DOMContentLoaded", () => {
        fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados") // API para buscar estados
            .then(response => response.json())
            .then(data => {
                const estadoSelect = document.getElementById('estado');
                data.forEach(estado => {
                    const option = document.createElement('option');
                    option.value = estado.id; // Código do estado
                    option.textContent = estado.nome; // Nome do estado
                    estadoSelect.appendChild(option);
                });
            })
            .catch(error => console.error('Erro ao buscar estados:', error));
    });

    // Função para buscar municípios com base no estado selecionado
    function fetchMunicipios(estadoId) {
        fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estadoId}/municipios`) // API para municípios
            .then(response => response.json())
            .then(data => {
                const municipioSelect = document.getElementById('municipio');
                municipioSelect.innerHTML = '<option value="" disabled selected>Selecione um município</option>';
                data.forEach(municipio => {
                    const option = document.createElement('option');
                    option.value = municipio.id; // Código do município
                    option.textContent = municipio.nome; // Nome do município
                    municipioSelect.appendChild(option);
                });
            })
            .catch(error => console.error('Erro ao buscar municípios:', error));
    }
    fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados")
    .then(response => response.json())
    .then(data => {
        console.log("Estados carregados:", data); // Log para verificar
        // Resto do código...
    })
    .catch(error => console.error('Erro ao buscar estados:', error));
            function fetchDadosMunicipio(municipioCodigo) {
            console.log("Código do município enviado:", municipioCodigo); // Verificar valor do município

            fetch(`https://api.dadosmunicipais.gov.br/municipios/${municipioCodigo}`) // Verifique se o endpoint está correto
                .then(response => {
                    console.log("Status da resposta:", response.status); // Verificar status da resposta
                    if (!response.ok) {
                        throw new Error(`Erro na API: ${response.status} - ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log("Dados retornados do município:", data); // Verificar dados no console

                    // Preenchendo os campos com os dados
                    document.getElementById('idh').value = data.idh || "Não disponível";
                    document.getElementById('idhFonte').value = data.fonteIDH || "Não disponível";
                    document.getElementById('idhAno').value = data.anoIDH || "";

                    document.getElementById('numeroHabitantes').value = data.populacao || "";
                    document.getElementById('habitantesFonte').value = data.fontePopulacao || "Não disponível";
                    document.getElementById('habitantesAno').value = data.anoPopulacao || "";
                })
                .catch(error => {
                    console.error('Erro ao buscar dados do município:', error);
                    alert("Erro ao buscar dados do município. Verifique sua conexão ou tente novamente.");
                });
        }
        function fetchDadosMunicipio(municipioCodigo) {
    fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/municipios/${municipioCodigo}`)
        .then(response => {
            if (!response.ok) {
                throw new Error("Erro ao buscar dados do município");
            }
            return response.json();
        })
        .then(data => {
            console.log("Dados retornados do município:", data);

            // Atualize os campos conforme necessário
            document.getElementById('idh').value = data.idh || "Não disponível";
            document.getElementById('idhFonte').value = data.fonte || "Não disponível";
            document.getElementById('idhAno').value = data.anoReferencia || "Não disponível";
            document.getElementById('numeroHabitantes').value = data.populacao || "Não disponível";
            document.getElementById('habitantesFonte').value = data.fontePopulacao || "Não disponível";
            document.getElementById('habitantesAno').value = data.anoPopulacao || "Não disponível";
        })
        .catch(error => {
            console.error('Erro ao buscar dados do município:', error);
            alert("Erro ao buscar dados do município. Verifique sua conexão ou tente novamente.");
        });
}



     // Função para exibir o modal de ajuda
     function showHelp() {
            const modal = document.getElementById('helpModal');
            modal.style.display = 'block';
        }

        // Função para fechar o modal de ajuda
        function closeHelp() {
            const modal = document.getElementById('helpModal');
            modal.style.display = 'none';
        }

        // Fechar o modal ao clicar fora da área de conteúdo
        window.onclick = function(event) {
            const modal = document.getElementById('helpModal');
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        };



          // Função para adicionar um núcleo
          function addNucleo() {
                        const nucleoList = document.getElementById('nucleoList');
                        const newRow = document.createElement('tr');
                        newRow.innerHTML = `
                            <td>
                                <input type="text" class="input-field" placeholder="Digite o nome do núcleo">
                            </td>
                        `;
                        nucleoList.appendChild(newRow);
                    }
            
                    // Função para remover o último núcleo
          function removeNucleo() {
                        const nucleoList = document.getElementById('nucleoList');
                        if (nucleoList.rows.length > 1) { // Garante que ao menos 1 linha fique presente
                            nucleoList.deleteRow(nucleoList.rows.length - 1);
                        } else {
                            alert('Não é possível remover todos os núcleos!');
                        }
                    }
            
          function addModalidade(){
                        const modalideList = document.getElementById('modalidadeList');
                        const newRow = document.createElement('tr');
                        newRow.innerHTML =  `<td>
                                        <input type="text" class="input-field" placeholder="Digite a quais modalides">
                                    </td>
                                `;
                                modaliddeList.appendChild(newRow);
                    }
            function removeModalidade(){
                        const modalidadeList = document.getElementById(modalidadeList)
                        if (modalidadeList,rows > 1) { // Garante que ao menos uma linha fique presente.
                            modalidadeList.deleteRow(modalidadeList.rows.length - 1);
                        } else {
                            alert('Não é possível remover todas as modalidades!')
                        }
            }
            




             // Função para adicionar uma nova linha para cargos
        function addRow() {
            const table = document.getElementById('teamTable').getElementsByTagName('tbody')[0];
            const newRow = document.createElement('tr');

            newRow.innerHTML = `
                <td><input type="text" class="input-field" placeholder="Nova Função"></td>
                <td><input type="number" class="input-field" placeholder="Qtd"></td>
                <td><textarea class="input-field" placeholder="Detalhe as atribuições"></textarea></td>
                <td><input type="text" class="input-field" placeholder="Carga Horária"></td>
                <td><input type="number" class="input-field" placeholder="Qtd Meses"></td>
                <td>
                    <button class="btn-danger" onclick="removeRow(this)">Remover</button>
                </td>
            `;

            table.appendChild(newRow);
        }

        // Função para remover uma linha para cargos
        function removeRow(button) {
            const row = button.parentElement.parentElement;
            row.remove();
        }






          // Adiciona uma nova linha na tabela de materiais
          function addMaterialRow() {
            const table = document.getElementById('materialTable').getElementsByTagName('tbody')[0];
            const newRow = document.createElement('tr');
            const rowCount = table.rows.length + 1;

            newRow.innerHTML = `
                <td>${rowCount}</td>
                <td><input type="text" class="input-field" placeholder="Digite a modalidade"></td>
                <td><input type="text" class="input-field" placeholder="Especifique o material"></td>
                <td><input type="number" class="input-field" placeholder="Digite a quantidade"></td>
                <td><textarea class="input-field" placeholder="Justifique o porquê da quantidade"></textarea></td>
                <td><button class="btn-danger" onclick="removeRow(this)">Remover</button></td>
            `;
            table.appendChild(newRow);
        }

        // Adiciona uma nova linha na tabela de uniformes
        function addUniformRow() {
            const table = document.getElementById('uniformTable').getElementsByTagName('tbody')[0];
            const newRow = document.createElement('tr');
            const rowCount = table.rows.length + 1;

            newRow.innerHTML = `
                <td>${rowCount}</td>
                <td><input type="text" class="input-field" placeholder="Digite a vestimenta"></td>
                <td><input type="text" class="input-field" placeholder="Especifique a vestimenta"></td>
                <td><input type="number" class="input-field" placeholder="Digite a quantidade"></td>
                <td><textarea class="input-field" placeholder="Justifique o porquê da quantidade"></textarea></td>
                <td><button class="btn-danger" onclick="removeRow(this)">Remover</button></td>
            `;
            table.appendChild(newRow);
        }

        // Remove uma linha da tabela materias/uniforme
        function removeRow(button) {
            const row = button.parentElement.parentElement;
            row.remove();
        }




        // Função para exibir ou ocultar campos adicionais divulgação1
        function toggleField(fieldId) {
            const field = document.getElementById(fieldId);
            if (field.classList.contains('active')) {
                field.classList.remove('active');
            } else {
                field.classList.add('active');
            }
        }






    </script>
</body>
<footer class="footer">
    <p>&copy; 2024 Ministério do Esporte. Todos os direitos reservados.</p>
    <p>
        <a href="#" class="footer-link" onclick="showInfo('privacidade')">Política de Privacidade</a> |
            <a href="#" class="footer-link" onclick="showInfo('termos')">Termos de Uso</a>
    </p>
</footer>
</html>
